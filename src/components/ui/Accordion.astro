---
import { H4 } from "ui";

interface Props {
  title: string;
  icon?: string;
}

const { title } = Astro.props;
---

<div class="accordion">
  <div class="accordion__header">
    <div class="accordion__header-title">{title}</div>
    <div class="accordion__header-icon icon">
      <svg
        width="45"
        height="45"
        viewBox="0 0 45 45"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <circle
          cx="22.5"
          cy="22.5"
          r="22.5"
          transform="rotate(-90 22.5 22.5)"
          fill="currentColor"></circle>
        <path
          d="M33.7071 22.7071C34.0976 22.3166 34.0976 21.6834 33.7071 21.2929L27.3431 14.9289C26.9526 14.5384 26.3195 14.5384 25.9289 14.9289C25.5384 15.3195 25.5384 15.9526 25.9289 16.3431L31.5858 22L25.9289 27.6569C25.5384 28.0474 25.5384 28.6805 25.9289 29.0711C26.3195 29.4616 26.9526 29.4616 27.3431 29.0711L33.7071 22.7071ZM12 22L12 23L33 23L33 22L33 21L12 21L12 22Z"
          fill="white"></path>
      </svg>
    </div>
  </div>
  <div class="accordion__body">
    <div class="accordion__content">
      <slot />
    </div>
    <slot name="footer" />
  </div>
</div>

<style lang="scss" is:global>
  @use "scss/helpers" as *;

  .accordion {
    width: 100%;

    &__header {
      position: relative;
      padding: rem(15) 0;
      width: 100%;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: space-between;
      gap: rem(20);

      &::after {
        content: "";
        position: absolute;
        bottom: 0;
        left: 0;
        width: 80%;
        height: rem(2);
        background: currentColor;
      }

      @include media("xs") {
        padding: rem(12) 0;

        &::after {
          height: rem(1);
        }
      }

      &-title {
        color: inherit;
        font-size: rem(24);
        font-weight: 700;
        text-transform: uppercase;

        @include media("3xl") {
          font-size: rem(20);
        }
        @include media("lg") {
          font-size: rem(18);
        }
        @include media("sm") {
          font-size: rem(16);
        }
      }

      &-icon {
        color: inherit;
        transition: var(--transition-ease);
        --icon-size: #{rem(45)};

        @include media("sm") {
          --icon-size: #{rem(32)};
        }
      }

      &[data-state="opened"] {
        color: var(--primary);

        .icon {
          transform: rotate(90deg);
        }
      }
    }

    &__body {
      max-height: 0;
      transition: max-height var(--transition-bezier);
      overflow: hidden;
    }

    &__content {
      padding: rem(28) 0 rem(38);
      width: 100%;
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      gap: rem(20);

      @include media("sm") {
        padding: rem(20) 0 rem(30);
      }

      ul {
        padding-left: 24px;
        list-style-type: disc;
      }

      p {
        max-width: rem(1135);
        font-family: var(--font-secondary);
      }
    }
  }
</style>
