---
interface Props {
  class?: string;
  id?: string;
  variant?: "primary" | "secondary" | "outline" | "link";
  href?: string;
}

const {
  class: className = "",
  id,
  variant = "primary",
  href,
  ...rest
} = Astro.props;

const variantClasses = {
  primary: "btn-primary",
  secondary: "btn-secondary",
  outline: "btn-outline",
  link: "btn-link",
};

const computedClass = ["btn", className, variantClasses[variant]]
  .filter(Boolean)
  .join(" ");

const Tag = href ? "a" : "button";
---

<Tag id={id} class={computedClass} href={href} {...rest}>
  <slot />
</Tag>

<style lang="scss" is:global>
  @use "scss/helpers" as *;

  .btn {
    color: initial;
    white-space: nowrap;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: var(--transition-ease);

    &-primary {
      position: relative;
      padding: rem(25) rem(65);
      color: #fff;
      font-size: rem(20);
      font-weight: 400;
      font-family: var(--font-secondary);
      text-transform: uppercase;
      background: var(--secondary);
      border-radius: rem(35);
      gap: rem(15);

      &::after {
        content: "";
        display: block;
        width: rem(58);
        height: rem(20);
        background: url('data:image/svg+xml,<svg width="59" height="16" viewBox="0 0 59 16" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M58.4571 8.70711C58.8476 8.31658 58.8476 7.68342 58.4571 7.29289L52.0931 0.928932C51.7026 0.538408 51.0695 0.538408 50.6789 0.928932C50.2884 1.31946 50.2884 1.95262 50.6789 2.34315L56.3358 8L50.6789 13.6569C50.2884 14.0474 50.2884 14.6805 50.6789 15.0711C51.0695 15.4616 51.7026 15.4616 52.0931 15.0711L58.4571 8.70711ZM0.25 8V9H57.75V8V7H0.25V8Z" fill="white" /></svg>')
          center/contain no-repeat;
        transition: var(--transition-ease);
      }

      &.bg-white {
        color: var(--primary);
        background: #fff;

        &::after {
          background: url('data:image/svg+xml,<svg width="59" height="16" viewBox="0 0 59 16" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M58.4571 8.70711C58.8476 8.31658 58.8476 7.68342 58.4571 7.29289L52.0931 0.928932C51.7026 0.538408 51.0695 0.538408 50.6789 0.928932C50.2884 1.31946 50.2884 1.95262 50.6789 2.34315L56.3358 8L50.6789 13.6569C50.2884 14.0474 50.2884 14.6805 50.6789 15.0711C51.0695 15.4616 51.7026 15.4616 52.0931 15.0711L58.4571 8.70711ZM0.25 8V9H57.75V8V7H0.25V8Z" fill="%230988D0" /></svg>')
            center/contain no-repeat;
        }
      }

      &:hover {
        background: var(--secondary-darker);

        &.bg-white {
          background: #fff;
        }

        &::after {
          transform: translateX(10%);
        }
      }

      @include media("3xl") {
        padding: rem(25) rem(50);
        font-size: rem(18);
      }
      @include media("lg") {
        padding: rem(20) rem(30);
        font-size: 1rem;
        border-radius: 9999px;

        &::after {
          width: rem(38);
          height: rem(10);
        }
      }
      @include media("xs") {
        padding: rem(14) rem(20);

        &::after {
          width: rem(32);
          height: rem(10);
        }
      }
    }

    &-secondary {
      height: rem(60);
      width: rem(264);
      color: #fff;
      background: var(--primary);
      border-radius: 9999px;
      gap: rem(14);

      svg {
        transition: var(--transition-ease);
      }

      &:hover {
        color: #fff;
        background: var(--secondary);

        svg {
          transform: translateX(rem(5));
        }
      }

      @include media("sm") {
        width: rem(240);
        height: rem(56);
        font-size: rem(16);
        gap: rem(20);
      }
    }

    &-outline {
      height: rem(56);
      width: rem(220);
      color: var(--primary);
      border: rem(1) solid var(--primary);
      border-radius: 9999px;

      &:hover {
        color: #fff;
        background: var(--primary);
      }
    }
  }
</style>
